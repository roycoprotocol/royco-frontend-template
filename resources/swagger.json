{
  "openapi": "3.0.0",
  "paths": {
    "/api/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "x-api-key": []
          },
          {
            "api-key-query": []
          }
        ],
        "tags": ["Health"]
      }
    },
    "/api/v1/token/quote/{chainId}/{contractAddress}": {
      "post": {
        "description": "Get token quote for a given token based on the chain id and contract address",
        "operationId": "TokenController_getTokenQuote",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "Network ID of the blockchain",
            "schema": {
              "title": "Chain ID",
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "contractAddress",
            "required": true,
            "in": "path",
            "description": "Deployment address of the contract",
            "schema": {
              "title": "Contract Address",
              "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenQuoteRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenQuoteResponse"
                },
                "example": {
                  "id": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                  "chainId": 1,
                  "contractAddress": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                  "name": "USDC",
                  "symbol": "USDC",
                  "image": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png",
                  "decimals": 6,
                  "source": "coinmarketcap",
                  "searchId": "3408",
                  "owner": null,
                  "issuers": null,
                  "type": "token",
                  "price": 2,
                  "fdv": 5964602376,
                  "totalSupply": 2982301188,
                  "lastUpdated": "2025-04-03 05:27:00",
                  "customTokenData": [
                    {
                      "id": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                      "price": 2,
                      "fdv": 5964602376,
                      "totalSupply": 2982301188
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "x-api-key": []
          },
          {
            "api-key-query": []
          }
        ],
        "summary": "Get token quote",
        "tags": ["Token"]
      }
    },
    "/api/v1/addons/test/{id}": {
      "get": {
        "operationId": "AddonsController_getIncentives",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Addons"]
      }
    },
    "/api/v1/addons/refresh/{id}": {
      "get": {
        "operationId": "AddonsController_refreshIncentives",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Addons"]
      }
    },
    "/api/v1/market/info/{id}": {
      "post": {
        "operationId": "MarketController_getMarket",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoMarketBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["Market"]
      }
    },
    "/api/v1/market/explore": {
      "post": {
        "operationId": "MarketController_getMarkets",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["Market"]
      }
    },
    "/api/v1/vault/info/{id}": {
      "post": {
        "description": "Get info for a vault",
        "operationId": "VaultController_getVaultInfo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The global unique identifier of the vault: <CHAIN_ID>_<VAULT_ADDRESS>",
            "schema": {
              "title": "ID",
              "example": "146_0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VaultInfoRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VaultInfoResponse"
                },
                "example": {
                  "id": "1_0x74d1fafa4e0163b2f1035f1b052137f3f9bad5cc",
                  "chainId": 1,
                  "vaultAddress": "0x74d1fafa4e0163b2f1035f1b052137f3f9bad5cc",
                  "name": "Roy USDC Mainnet",
                  "description": "Deposit assets to earn highest yields.",
                  "chainIds": [1, 146],
                  "capacity": {
                    "ratio": 0.00004699952027437871,
                    "maxUsd": 1000000,
                    "currentUsd": 46.99952027437871
                  },
                  "maxLockup": "2592000",
                  "managers": [
                    {
                      "id": "veda",
                      "link": "https://veda.tech/",
                      "name": "VEDA",
                      "image": "https://pbs.twimg.com/profile_images/1790405638847135744/mx3dr412_400x400.png",
                      "symbol": "VEDA",
                      "lastUpdated": "2025-03-27 23:19:59.714695"
                    }
                  ],
                  "depositTokenIds": [
                    "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                  ],
                  "incentiveTokenIds": [],
                  "depositTokens": [
                    {
                      "id": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                      "fdv": 60629686957.17231,
                      "name": "USDC",
                      "type": "token",
                      "image": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png",
                      "owner": null,
                      "price": 0.9999897930718875,
                      "source": "coinmarketcap",
                      "symbol": "USDC",
                      "chainId": 1,
                      "issuers": null,
                      "decimals": 6,
                      "searchId": "3408",
                      "lastUpdated": "2025-04-03 05:29:00",
                      "totalSupply": 60630305806.345116,
                      "contractAddress": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                    }
                  ],
                  "incentiveTokens": [],
                  "tvlUsd": 46.99952027437871,
                  "allocations": [
                    {
                      "id": "reserve",
                      "name": "Reserves",
                      "depositToken": {
                        "id": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                        "fdv": 60629686957.17231,
                        "name": "USDC",
                        "type": "token",
                        "image": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png",
                        "owner": null,
                        "price": 0.9999897930718875,
                        "source": "coinmarketcap",
                        "symbol": "USDC",
                        "chainId": 1,
                        "issuers": null,
                        "decimals": 6,
                        "searchId": "3408",
                        "rawAmount": "47000000",
                        "lastUpdated": "2025-04-03 05:29:00",
                        "tokenAmount": 47,
                        "totalSupply": 60630305806.345116,
                        "tokenAmountUsd": 46.99952027437871,
                        "allocationRatio": 1,
                        "contractAddress": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                      },
                      "incentiveTokens": []
                    }
                  ],
                  "isVerified": true,
                  "yieldRate": 0,
                  "lastUpdated": "2025-04-03 05:30:01"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "x-api-key": []
          },
          {
            "api-key-query": []
          }
        ],
        "summary": "Get vault info",
        "tags": ["Vault"]
      }
    },
    "/api/v1/position/recipe": {
      "post": {
        "description": "Get positions for all recipe markets. Use filters property in body to filter out by market id, chain id, etc. Since response is paginated, use pagination properties in body to get next page based on size property of page. Do note: max page size for response is 500.",
        "operationId": "PositionController_getRecipePositions",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipePositionResponse"
                },
                "example": {
                  "data": [
                    {
                      "id": "11155111_0x871ced10d9744583d6585329313748b676b3dce9",
                      "rawMarketRefId": "11155111_0_0xda51d0e8b23511146ab4c2058859473536fef2f7ae7edb52c99c947b292cbbc1",
                      "chainId": 11155111,
                      "weirollWallet": "0x871ced10d9744583d6585329313748b676b3dce9",
                      "accountAddress": "0x77777cc68b333a2256b436d675e8d257699aa667",
                      "marketId": "0xda51d0e8b23511146ab4c2058859473536fef2f7ae7edb52c99c947b292cbbc1",
                      "rewardStyle": 0,
                      "isForfeited": false,
                      "unlockTimestamp": "1742140704",
                      "blockNumber": "7291787",
                      "blockTimestamp": "1734364704",
                      "transactionHash": "0x89cd02fe80da13e1eb592b410fc05330ee12e0bfcce7653c32916a1db551501c",
                      "logIndex": "161",
                      "name": "Sepolia Test Recipe Market",
                      "lockupTime": "7776000",
                      "inputToken": {
                        "id": "11155111-0x5839b25b55380bc3c701b2c808331e34e92161fe",
                        "chainId": 11155111,
                        "contractAddress": "0x5839b25b55380bc3c701b2c808331e34e92161fe",
                        "name": "USDC",
                        "symbol": "USDC",
                        "image": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png",
                        "decimals": 6,
                        "source": "coinmarketcap",
                        "searchId": "3408",
                        "owner": null,
                        "issuers": null,
                        "type": "token",
                        "price": 0.9998253930843546,
                        "fdv": 60860770098.46688,
                        "totalSupply": 60871398665.63891,
                        "lastUpdated": "2025-04-04 01:18:00",
                        "rawAmount": "10000000",
                        "tokenAmount": 10,
                        "tokenAmountUsd": 9.998253930843546,
                        "isWithdrawn": false
                      },
                      "incentiveTokens": [
                        {
                          "id": "11155111-0x6a7fde508d41e65f768665fc18b9ce554dc50507",
                          "chainId": 11155111,
                          "contractAddress": "0x6a7fde508d41e65f768665fc18b9ce554dc50507",
                          "name": "Aave",
                          "symbol": "AAVE",
                          "image": "https://s2.coinmarketcap.com/static/img/coins/64x64/7278.png",
                          "decimals": 18,
                          "source": "coinmarketcap",
                          "searchId": "7278",
                          "owner": null,
                          "issuers": null,
                          "type": "token",
                          "price": 149.5233701767027,
                          "fdv": 2257340601.736285,
                          "totalSupply": 16000000,
                          "lastUpdated": "2025-04-04 01:18:00",
                          "rawAmount": "557213930348258",
                          "tokenAmount": 0.000557213930348258,
                          "tokenAmountUsd": 0.08331650477507803,
                          "yieldRate": 0.033795372286721935,
                          "isClaimed": true
                        }
                      ],
                      "nativeIncentives": [],
                      "externalIncentives": [],
                      "yieldRate": 0.033795372286721935
                    }
                  ],
                  "count": 43,
                  "page": {
                    "index": 1,
                    "size": 1,
                    "total": 43
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "x-api-key": []
          },
          {
            "api-key-query": []
          }
        ],
        "summary": "Get recipe positions",
        "tags": ["Position"]
      }
    },
    "/api/v1/position/vault": {
      "post": {
        "description": "Get positions for all vaults. Use filters property in body to filter out by vault id, chain id, etc. Since response is paginated, use pagination properties in body to get next page based on size property of page. Do note: max page size for response is 500.",
        "operationId": "PositionController_getVaultPositions",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VaultPositionResponse"
                },
                "example": {
                  "data": [
                    {
                      "id": "21000000_0x91e59126365118a2bfe13560a3a575c6d42bf59f_0x0f6e98a756a40dd050dc78959f45559f98d3289d",
                      "rawMarketRefId": "21000000_1_0x91e59126365118a2bfe13560a3a575c6d42bf59f",
                      "chainId": 21000000,
                      "marketId": "0x91e59126365118a2bfe13560a3a575c6d42bf59f",
                      "accountAddress": "0x0f6e98a756a40dd050dc78959f45559f98d3289d",
                      "shares": "27279382177508",
                      "name": "Lend BTCN onto ZeroLend on Corn",
                      "lockupTime": "0",
                      "inputToken": {
                        "id": "21000000-0xda5ddd7270381a7c2717ad10d1c0ecb19e3cdfb2",
                        "chainId": 21000000,
                        "contractAddress": "0xda5ddd7270381a7c2717ad10d1c0ecb19e3cdfb2",
                        "name": "Wrapped Bitcorn",
                        "symbol": "WBTCN",
                        "image": "https://docs.usecorn.com/img/guides/Corn_Brand_Assets/Logos/wbtcn_logo.svg",
                        "decimals": 18,
                        "source": "coingecko",
                        "searchId": "wrapped-bitcoin",
                        "owner": null,
                        "issuers": null,
                        "type": "token",
                        "price": 82979,
                        "fdv": 10696951284,
                        "totalSupply": 128915.05657878,
                        "lastUpdated": "2025-04-04 01:18:00",
                        "rawAmount": "27281033957121",
                        "tokenAmount": 0.000027281033957121,
                        "tokenAmountUsd": 2.2637529167279435,
                        "isWithdrawn": false
                      },
                      "incentiveTokens": [
                        {
                          "id": "21000000-0xdf0b24095e15044538866576754f3c964e902ee6",
                          "chainId": 21000000,
                          "contractAddress": "0xdf0b24095e15044538866576754f3c964e902ee6",
                          "name": "Bridged USDC (Corn)",
                          "symbol": "USDC.e",
                          "image": "https://coin-images.coingecko.com/coins/images/30691/large/usdc.png?1696529560",
                          "decimals": 6,
                          "source": "coingecko",
                          "searchId": "usd-coin-ethereum-bridged",
                          "owner": null,
                          "issuers": null,
                          "type": "token",
                          "price": 1.001,
                          "fdv": 114790991,
                          "totalSupply": 114702190.648402,
                          "lastUpdated": "2025-04-04 01:18:00",
                          "rawAmount": "4067713",
                          "tokenAmount": 4.067713,
                          "tokenAmountUsd": 4.071780713,
                          "yieldRate": 0,
                          "isClaimed": false
                        },
                        {
                          "id": "21000000-0x606cf606076d1a74cbea93940742b6a2cf901139",
                          "chainId": 21000000,
                          "contractAddress": "0x606cf606076d1a74cbea93940742b6a2cf901139",
                          "name": "Corn Kernels",
                          "symbol": "KERNELS",
                          "image": "https://imgproxy-mainnet.routescan.io/Ep-Teqz159w-GRQa32KyqR-2wDoSd6Bkr_OQYZYB8JE/pr:thumb_64/aHR0cHM6Ly9jbXMtY2RuLmF2YXNjYW4uY29tL2NtczIvY29ybl9sb2dvLmJlNzFmNWRjODJiYS5wbmc",
                          "decimals": 18,
                          "source": "external",
                          "searchId": "none",
                          "owner": "0xf52884030add937c093246bf545dd22e8245e08b",
                          "issuers": [
                            "0x91e59126365118a2bfe13560a3a575c6d42bf59f"
                          ],
                          "type": "point",
                          "price": 0,
                          "fdv": 0,
                          "totalSupply": 0,
                          "lastUpdated": "2025-04-04 01:18:00",
                          "rawAmount": "495613692093684507823331",
                          "tokenAmount": 495613.6920936845,
                          "tokenAmountUsd": 0,
                          "yieldRate": 0,
                          "isClaimed": false
                        }
                      ],
                      "claimedIncentiveTokens": [],
                      "nativeIncentives": [],
                      "externalIncentives": [],
                      "yieldRate": 0
                    }
                  ],
                  "count": 2,
                  "page": {
                    "index": 1,
                    "size": 1,
                    "total": 2
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "x-api-key": []
          },
          {
            "api-key-query": []
          }
        ],
        "summary": "Get vault positions",
        "tags": ["Position"]
      }
    },
    "/api/v1/position/boring": {
      "post": {
        "description": "Get positions for all boring markets. Use filters property in body to filter out by vault id, chain id, etc. Since response is paginated, use pagination properties in body to get next page based on size property of page. Do note: max page size for response is 500.",
        "operationId": "PositionController_getBoringPositions",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoringPositionResponse"
                },
                "example": {
                  "data": [
                    {
                      "id": "146_0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e_0x74d1fafa4e0163b2f1035f1b052137f3f9bad5cc",
                      "chainId": 146,
                      "vaultAddress": "0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e",
                      "accountAddress": "0x74d1fafa4e0163b2f1035f1b052137f3f9bad5cc",
                      "unclaimedRewardTokens": [
                        {
                          "id": "146-0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "chainId": 146,
                          "contractAddress": "0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "name": "Sonic Bridged USDC.e (Sonic)",
                          "symbol": "USDC.e",
                          "image": "https://coin-images.coingecko.com/coins/images/53064/large/logo.png?1735179479",
                          "decimals": 6,
                          "source": "coingecko",
                          "searchId": "sonic-bridged-usdc-e-sonic",
                          "owner": null,
                          "issuers": null,
                          "type": "token",
                          "price": 0.998955,
                          "fdv": 460134168,
                          "totalSupply": 460028032.921229,
                          "lastUpdated": "2025-04-04 21:02:00",
                          "rawAmount": "348232",
                          "tokenAmount": 0.348232,
                          "tokenAmountUsd": 0.34786809756,
                          "rewardIds": ["0"]
                        }
                      ],
                      "claimedRewardTokens": []
                    },
                    {
                      "id": "1_0x74d1fafa4e0163b2f1035f1b052137f3f9bad5cc_0x6e26a34a8ca973a4a5a41213b79cf2b0cb1a508d",
                      "chainId": 1,
                      "vaultAddress": "0x74d1fafa4e0163b2f1035f1b052137f3f9bad5cc",
                      "accountAddress": "0x6e26a34a8ca973a4a5a41213b79cf2b0cb1a508d",
                      "unclaimedRewardTokens": [],
                      "claimedRewardTokens": []
                    },
                    {
                      "id": "146_0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e_0x77777cc68b333a2256b436d675e8d257699aa667",
                      "chainId": 146,
                      "vaultAddress": "0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e",
                      "accountAddress": "0x77777cc68b333a2256b436d675e8d257699aa667",
                      "unclaimedRewardTokens": [
                        {
                          "id": "146-0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "chainId": 146,
                          "contractAddress": "0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "name": "Sonic Bridged USDC.e (Sonic)",
                          "symbol": "USDC.e",
                          "image": "https://coin-images.coingecko.com/coins/images/53064/large/logo.png?1735179479",
                          "decimals": 6,
                          "source": "coingecko",
                          "searchId": "sonic-bridged-usdc-e-sonic",
                          "owner": null,
                          "issuers": null,
                          "type": "token",
                          "price": 0.998955,
                          "fdv": 460134168,
                          "totalSupply": 460028032.921229,
                          "lastUpdated": "2025-04-04 21:02:00",
                          "rawAmount": "182",
                          "tokenAmount": 0.000182,
                          "tokenAmountUsd": 0.00018180981000000002,
                          "rewardIds": ["0"]
                        }
                      ],
                      "claimedRewardTokens": []
                    },
                    {
                      "id": "146_0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e_0x544ebd21a5d6b94615c8baf41986165096dd7d78",
                      "chainId": 146,
                      "vaultAddress": "0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e",
                      "accountAddress": "0x544ebd21a5d6b94615c8baf41986165096dd7d78",
                      "unclaimedRewardTokens": [
                        {
                          "id": "146-0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "chainId": 146,
                          "contractAddress": "0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "name": "Sonic Bridged USDC.e (Sonic)",
                          "symbol": "USDC.e",
                          "image": "https://coin-images.coingecko.com/coins/images/53064/large/logo.png?1735179479",
                          "decimals": 6,
                          "source": "coingecko",
                          "searchId": "sonic-bridged-usdc-e-sonic",
                          "owner": null,
                          "issuers": null,
                          "type": "token",
                          "price": 0.998955,
                          "fdv": 460134168,
                          "totalSupply": 460028032.921229,
                          "lastUpdated": "2025-04-04 21:02:00",
                          "rawAmount": "348232",
                          "tokenAmount": 0.348232,
                          "tokenAmountUsd": 0.34786809756,
                          "rewardIds": ["0"]
                        }
                      ],
                      "claimedRewardTokens": []
                    },
                    {
                      "id": "146_0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e_0xd0885a285f9a00aa2d9734d2d26be1186f850e38",
                      "chainId": 146,
                      "vaultAddress": "0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e",
                      "accountAddress": "0xd0885a285f9a00aa2d9734d2d26be1186f850e38",
                      "unclaimedRewardTokens": [],
                      "claimedRewardTokens": []
                    }
                  ],
                  "count": 1,
                  "page": {
                    "index": 1,
                    "size": 500,
                    "total": 1
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "x-api-key": []
          },
          {
            "api-key-query": []
          }
        ],
        "summary": "Get boring positions",
        "tags": ["Position"]
      }
    },
    "/api/v1/position/boring/{id}/{accountAddress}": {
      "post": {
        "description": "Get positions of an account address inside a vault.",
        "operationId": "PositionController_getSpecificBoringPosition",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The global unique identifier of the vault: <CHAIN_ID>_<VAULT_ADDRESS>",
            "schema": {
              "title": "ID",
              "example": "146_0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e",
              "type": "string"
            }
          },
          {
            "name": "accountAddress",
            "required": true,
            "in": "path",
            "description": "Wallet address of the account",
            "schema": {
              "title": "Account Address",
              "example": "0x77777cc68b333a2256b436d675e8d257699aa667",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecificBoringPositionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecificBoringPositionResponse"
                },
                "example": {
                  "data": [
                    {
                      "id": "146_0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e_0x74d1fafa4e0163b2f1035f1b052137f3f9bad5cc",
                      "chainId": 146,
                      "vaultAddress": "0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e",
                      "accountAddress": "0x74d1fafa4e0163b2f1035f1b052137f3f9bad5cc",
                      "unclaimedRewardTokens": [
                        {
                          "id": "146-0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "chainId": 146,
                          "contractAddress": "0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "name": "Sonic Bridged USDC.e (Sonic)",
                          "symbol": "USDC.e",
                          "image": "https://coin-images.coingecko.com/coins/images/53064/large/logo.png?1735179479",
                          "decimals": 6,
                          "source": "coingecko",
                          "searchId": "sonic-bridged-usdc-e-sonic",
                          "owner": null,
                          "issuers": null,
                          "type": "token",
                          "price": 0.998955,
                          "fdv": 460134168,
                          "totalSupply": 460028032.921229,
                          "lastUpdated": "2025-04-04 21:02:00",
                          "rawAmount": "348232",
                          "tokenAmount": 0.348232,
                          "tokenAmountUsd": 0.34786809756,
                          "rewardIds": ["0"]
                        }
                      ],
                      "claimedRewardTokens": []
                    },
                    {
                      "id": "1_0x74d1fafa4e0163b2f1035f1b052137f3f9bad5cc_0x6e26a34a8ca973a4a5a41213b79cf2b0cb1a508d",
                      "chainId": 1,
                      "vaultAddress": "0x74d1fafa4e0163b2f1035f1b052137f3f9bad5cc",
                      "accountAddress": "0x6e26a34a8ca973a4a5a41213b79cf2b0cb1a508d",
                      "unclaimedRewardTokens": [],
                      "claimedRewardTokens": []
                    },
                    {
                      "id": "146_0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e_0x77777cc68b333a2256b436d675e8d257699aa667",
                      "chainId": 146,
                      "vaultAddress": "0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e",
                      "accountAddress": "0x77777cc68b333a2256b436d675e8d257699aa667",
                      "unclaimedRewardTokens": [
                        {
                          "id": "146-0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "chainId": 146,
                          "contractAddress": "0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "name": "Sonic Bridged USDC.e (Sonic)",
                          "symbol": "USDC.e",
                          "image": "https://coin-images.coingecko.com/coins/images/53064/large/logo.png?1735179479",
                          "decimals": 6,
                          "source": "coingecko",
                          "searchId": "sonic-bridged-usdc-e-sonic",
                          "owner": null,
                          "issuers": null,
                          "type": "token",
                          "price": 0.998955,
                          "fdv": 460134168,
                          "totalSupply": 460028032.921229,
                          "lastUpdated": "2025-04-04 21:02:00",
                          "rawAmount": "182",
                          "tokenAmount": 0.000182,
                          "tokenAmountUsd": 0.00018180981000000002,
                          "rewardIds": ["0"]
                        }
                      ],
                      "claimedRewardTokens": []
                    },
                    {
                      "id": "146_0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e_0x544ebd21a5d6b94615c8baf41986165096dd7d78",
                      "chainId": 146,
                      "vaultAddress": "0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e",
                      "accountAddress": "0x544ebd21a5d6b94615c8baf41986165096dd7d78",
                      "unclaimedRewardTokens": [
                        {
                          "id": "146-0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "chainId": 146,
                          "contractAddress": "0x29219dd400f2bf60e5a23d13be72b486d4038894",
                          "name": "Sonic Bridged USDC.e (Sonic)",
                          "symbol": "USDC.e",
                          "image": "https://coin-images.coingecko.com/coins/images/53064/large/logo.png?1735179479",
                          "decimals": 6,
                          "source": "coingecko",
                          "searchId": "sonic-bridged-usdc-e-sonic",
                          "owner": null,
                          "issuers": null,
                          "type": "token",
                          "price": 0.998955,
                          "fdv": 460134168,
                          "totalSupply": 460028032.921229,
                          "lastUpdated": "2025-04-04 21:02:00",
                          "rawAmount": "348232",
                          "tokenAmount": 0.348232,
                          "tokenAmountUsd": 0.34786809756,
                          "rewardIds": ["0"]
                        }
                      ],
                      "claimedRewardTokens": []
                    },
                    {
                      "id": "146_0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e_0xd0885a285f9a00aa2d9734d2d26be1186f850e38",
                      "chainId": 146,
                      "vaultAddress": "0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e",
                      "accountAddress": "0xd0885a285f9a00aa2d9734d2d26be1186f850e38",
                      "unclaimedRewardTokens": [],
                      "claimedRewardTokens": []
                    }
                  ],
                  "count": 1,
                  "page": {
                    "index": 1,
                    "size": 500,
                    "total": 1
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "x-api-key": []
          },
          {
            "api-key-query": []
          }
        ],
        "summary": "Get boring position of an account address inside a vault",
        "tags": ["Position"]
      }
    }
  },
  "info": {
    "title": "Royco API",
    "description": "APIs for interacting with the Royco protocol.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "royco",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "Authorization",
        "description": "Enter your bearer token",
        "in": "header"
      },
      "x-api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Enter your API key"
      },
      "api-key-query": {
        "type": "apiKey",
        "in": "query",
        "name": "apiKey",
        "description": "Enter your API key as URL parameter"
      }
    },
    "schemas": {
      "CustomTokenDataElement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          }
        },
        "required": ["id"]
      },
      "TokenQuoteRequestBody": {
        "type": "object",
        "properties": {
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          }
        }
      },
      "TokenQuote": {
        "type": "object",
        "properties": {
          "rawMetadata": {
            "type": "object",
            "title": "Raw Metadata",
            "description": "Raw metadata"
          },
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "contractAddress": {
            "type": "string",
            "title": "Contract Address",
            "description": "Deployment address of the contract",
            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the token",
            "example": "USDC"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol",
            "description": "The symbol of the token",
            "example": "USDC"
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The logo of the token",
            "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png"
          },
          "decimals": {
            "type": "number",
            "title": "Decimals",
            "description": "The number of decimals of the token",
            "example": 6
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "The source for the price feed of the token",
            "example": "coinmarketcap",
            "enum": [
              "coinmarketcap",
              "coingecko",
              "lp",
              "enso",
              "pendle",
              "plume",
              "external"
            ]
          },
          "searchId": {
            "type": "string",
            "title": "Search ID",
            "description": "The search id for the token on the source price feed: for CoinmarketCap, it's UCID (found under metadata section of the token page) -- for Coingecko, it's token slug (found in the URL of the token page) -- for all other sources, we have a custom search id according to their price feed API schema",
            "example": "3408"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the token",
            "example": "token",
            "enum": ["token", "point", "lp"]
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          },
          "owner": {
            "type": "string",
            "title": "Owner",
            "description": "The owner of the point program token",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "issuers": {
            "title": "Issuers",
            "description": "Authorized issuers of the point program token",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTokens": {
            "title": "Sub Tokens",
            "description": "Array of sub tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenQuote"
            }
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          }
        },
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "name",
          "symbol",
          "image",
          "decimals",
          "source",
          "searchId",
          "type",
          "price",
          "fdv",
          "totalSupply",
          "lastUpdated"
        ]
      },
      "TokenQuoteResponse": {
        "type": "object",
        "properties": {
          "rawMetadata": {
            "type": "object",
            "title": "Raw Metadata",
            "description": "Raw metadata"
          },
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "contractAddress": {
            "type": "string",
            "title": "Contract Address",
            "description": "Deployment address of the contract",
            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the token",
            "example": "USDC"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol",
            "description": "The symbol of the token",
            "example": "USDC"
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The logo of the token",
            "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png"
          },
          "decimals": {
            "type": "number",
            "title": "Decimals",
            "description": "The number of decimals of the token",
            "example": 6
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "The source for the price feed of the token",
            "example": "coinmarketcap",
            "enum": [
              "coinmarketcap",
              "coingecko",
              "lp",
              "enso",
              "pendle",
              "plume",
              "external"
            ]
          },
          "searchId": {
            "type": "string",
            "title": "Search ID",
            "description": "The search id for the token on the source price feed: for CoinmarketCap, it's UCID (found under metadata section of the token page) -- for Coingecko, it's token slug (found in the URL of the token page) -- for all other sources, we have a custom search id according to their price feed API schema",
            "example": "3408"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the token",
            "example": "token",
            "enum": ["token", "point", "lp"]
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          },
          "owner": {
            "type": "string",
            "title": "Owner",
            "description": "The owner of the point program token",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "issuers": {
            "title": "Issuers",
            "description": "Authorized issuers of the point program token",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTokens": {
            "title": "Sub Tokens",
            "description": "Array of sub tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenQuote"
            }
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          }
        },
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "name",
          "symbol",
          "image",
          "decimals",
          "source",
          "searchId",
          "type",
          "price",
          "fdv",
          "totalSupply",
          "lastUpdated"
        ]
      },
      "InfoMarketBody": {
        "type": "object",
        "properties": {
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          }
        }
      },
      "Filter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Filter ID",
            "description": "Column ID to apply the filter on",
            "example": "chainId"
          },
          "value": {
            "title": "Filter Value",
            "description": "Value to filter by",
            "example": "146",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            ]
          },
          "condition": {
            "type": "string",
            "title": "Filter Condition",
            "description": "Condition to apply the filter on -- if not provided, defaults to \"eq\"",
            "example": "gte",
            "default": "eq"
          },
          "join": {
            "type": "string",
            "title": "Filter Join",
            "description": "Join to union the filters on -- if not provided, defaults to \"and\"",
            "example": "or",
            "default": "and"
          }
        },
        "required": ["id", "value"]
      },
      "Sorting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Sorting ID",
            "description": "Column ID to sort by",
            "example": "tvlUsd"
          },
          "desc": {
            "type": "boolean",
            "title": "Sorting Order",
            "description": "Sorting order -- if not provided, defaults to \"desc\"",
            "example": true,
            "default": false
          }
        },
        "required": ["id"]
      },
      "RequestPage": {
        "type": "object",
        "properties": {
          "index": {
            "type": "number",
            "title": "Page Index",
            "description": "Page index",
            "example": 1
          },
          "size": {
            "type": "number",
            "title": "Page Size",
            "description": "Page size",
            "example": 3
          }
        }
      },
      "BaseRequestBody": {
        "type": "object",
        "properties": {
          "filters": {
            "title": "Filters Array",
            "description": "Array of filter objects to apply to the results",
            "example": [
              {
                "id": "chainId",
                "value": 1
              },
              {
                "id": "tvlUsd",
                "value": 1000000,
                "condition": "gte"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filter"
            }
          },
          "sorting": {
            "title": "Sorting Object",
            "description": "Object type to sort results with",
            "example": {
              "id": "tvlUsd",
              "desc": true
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Sorting"
              }
            ]
          },
          "page": {
            "title": "Request Page Object",
            "description": "Object type to request a page of results",
            "default": {
              "index": 1,
              "size": 10
            },
            "example": {
              "index": 1,
              "size": 3
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/RequestPage"
              }
            ]
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          }
        }
      },
      "VaultInfoRequestBody": {
        "type": "object",
        "properties": {
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          }
        }
      },
      "VaultCapacity": {
        "type": "object",
        "properties": {
          "currentUsd": {
            "type": "number",
            "title": "Currently filled capacity in USD",
            "description": "The maximum amount of USD that can be filled in the vault",
            "example": 20000000
          },
          "ratio": {
            "type": "number",
            "title": "Ratio of capacity filled",
            "description": "The ratio of capacity filled in the vault",
            "example": 0.5
          }
        },
        "required": ["currentUsd", "currentUsd", "ratio"]
      },
      "VaultManager": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Manager ID",
            "description": "The ID of the manager",
            "example": "veda"
          },
          "name": {
            "type": "string",
            "title": "Manager Name",
            "description": "The name of the manager",
            "example": "VEDA"
          },
          "symbol": {
            "type": "string",
            "title": "Manager Symbol",
            "description": "The symbol of the manager",
            "example": "VEDA"
          },
          "image": {
            "type": "string",
            "title": "Manager Image",
            "description": "The image of the manager",
            "example": "https://pbs.twimg.com/profile_images/1790405638847135744/mx3dr412_400x400.png"
          },
          "link": {
            "type": "string",
            "title": "Manager Link",
            "description": "The link of the manager",
            "example": "https://veda.tech/"
          }
        },
        "required": ["id", "name", "symbol"]
      },
      "VaultDepositToken": {
        "type": "object",
        "properties": {
          "rawMetadata": {
            "type": "object",
            "title": "Raw Metadata",
            "description": "Raw metadata"
          },
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "contractAddress": {
            "type": "string",
            "title": "Contract Address",
            "description": "Deployment address of the contract",
            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the token",
            "example": "USDC"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol",
            "description": "The symbol of the token",
            "example": "USDC"
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The logo of the token",
            "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png"
          },
          "decimals": {
            "type": "number",
            "title": "Decimals",
            "description": "The number of decimals of the token",
            "example": 6
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "The source for the price feed of the token",
            "example": "coinmarketcap",
            "enum": [
              "coinmarketcap",
              "coingecko",
              "lp",
              "enso",
              "pendle",
              "plume",
              "external"
            ]
          },
          "searchId": {
            "type": "string",
            "title": "Search ID",
            "description": "The search id for the token on the source price feed: for CoinmarketCap, it's UCID (found under metadata section of the token page) -- for Coingecko, it's token slug (found in the URL of the token page) -- for all other sources, we have a custom search id according to their price feed API schema",
            "example": "3408"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the token",
            "example": "token",
            "enum": ["token", "point", "lp"]
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          },
          "owner": {
            "type": "string",
            "title": "Owner",
            "description": "The owner of the point program token",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "issuers": {
            "title": "Issuers",
            "description": "Authorized issuers of the point program token",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTokens": {
            "title": "Sub Tokens",
            "description": "Array of sub tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenQuote"
            }
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          }
        },
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "name",
          "symbol",
          "image",
          "decimals",
          "source",
          "searchId",
          "type",
          "price",
          "fdv",
          "totalSupply",
          "lastUpdated"
        ]
      },
      "VaultIncentiveToken": {
        "type": "object",
        "properties": {
          "rawMetadata": {
            "type": "object",
            "title": "Raw Metadata",
            "description": "Raw metadata"
          },
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "contractAddress": {
            "type": "string",
            "title": "Contract Address",
            "description": "Deployment address of the contract",
            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the token",
            "example": "USDC"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol",
            "description": "The symbol of the token",
            "example": "USDC"
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The logo of the token",
            "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png"
          },
          "decimals": {
            "type": "number",
            "title": "Decimals",
            "description": "The number of decimals of the token",
            "example": 6
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "The source for the price feed of the token",
            "example": "coinmarketcap",
            "enum": [
              "coinmarketcap",
              "coingecko",
              "lp",
              "enso",
              "pendle",
              "plume",
              "external"
            ]
          },
          "searchId": {
            "type": "string",
            "title": "Search ID",
            "description": "The search id for the token on the source price feed: for CoinmarketCap, it's UCID (found under metadata section of the token page) -- for Coingecko, it's token slug (found in the URL of the token page) -- for all other sources, we have a custom search id according to their price feed API schema",
            "example": "3408"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the token",
            "example": "token",
            "enum": ["token", "point", "lp"]
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          },
          "owner": {
            "type": "string",
            "title": "Owner",
            "description": "The owner of the point program token",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "issuers": {
            "title": "Issuers",
            "description": "Authorized issuers of the point program token",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTokens": {
            "title": "Sub Tokens",
            "description": "Array of sub tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenQuote"
            }
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "The category of the reward token",
            "example": "active",
            "enum": ["active", "native", "external"]
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "The label of the reward token",
            "example": "Staked GHO Points"
          },
          "rawAmount": {
            "type": "string",
            "title": "Raw Amount",
            "description": "Amount in wei",
            "example": "10000000000"
          },
          "tokenAmount": {
            "type": "number",
            "title": "Token Amount",
            "description": "Normalized raw amount in token decimals",
            "example": 1000
          },
          "tokenAmountUsd": {
            "type": "number",
            "title": "Token Amount USD",
            "description": "Normalized raw amount in USD",
            "example": 999.99
          },
          "yieldRate": {
            "type": "number",
            "title": "Yield Rate",
            "description": "Yield rate as a ratio: 0.1 = 10%, 1 = 100%, etc.",
            "example": "0.1"
          },
          "yieldText": {
            "type": "string",
            "title": "Yield Text",
            "description": "Yield rate in string format to represent any arbitrary yields",
            "examples": ["10x AAVE", "25 BTC pro-rata", "3x DAI per share"]
          },
          "scaleRatio": {
            "type": "number",
            "title": "Scale Ratio",
            "description": "The ratio to scale by for the incentive token to get user's rate"
          },
          "unlockTimestamp": {
            "type": "string",
            "title": "Unlock Timestamp",
            "description": "The timestamp when the incentive token is unlocked"
          }
        },
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "name",
          "symbol",
          "image",
          "decimals",
          "source",
          "searchId",
          "type",
          "price",
          "fdv",
          "totalSupply",
          "lastUpdated",
          "category",
          "scaleRatio",
          "unlockTimestamp"
        ]
      },
      "VaultAllocationDepositToken": {
        "type": "object",
        "properties": {
          "rawMetadata": {
            "type": "object",
            "title": "Raw Metadata",
            "description": "Raw metadata"
          },
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "contractAddress": {
            "type": "string",
            "title": "Contract Address",
            "description": "Deployment address of the contract",
            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the token",
            "example": "USDC"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol",
            "description": "The symbol of the token",
            "example": "USDC"
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The logo of the token",
            "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png"
          },
          "decimals": {
            "type": "number",
            "title": "Decimals",
            "description": "The number of decimals of the token",
            "example": 6
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "The source for the price feed of the token",
            "example": "coinmarketcap",
            "enum": [
              "coinmarketcap",
              "coingecko",
              "lp",
              "enso",
              "pendle",
              "plume",
              "external"
            ]
          },
          "searchId": {
            "type": "string",
            "title": "Search ID",
            "description": "The search id for the token on the source price feed: for CoinmarketCap, it's UCID (found under metadata section of the token page) -- for Coingecko, it's token slug (found in the URL of the token page) -- for all other sources, we have a custom search id according to their price feed API schema",
            "example": "3408"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the token",
            "example": "token",
            "enum": ["token", "point", "lp"]
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          },
          "owner": {
            "type": "string",
            "title": "Owner",
            "description": "The owner of the point program token",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "issuers": {
            "title": "Issuers",
            "description": "Authorized issuers of the point program token",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTokens": {
            "title": "Sub Tokens",
            "description": "Array of sub tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenQuote"
            }
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          },
          "rawAmount": {
            "type": "string",
            "title": "Raw Amount",
            "description": "Amount in wei",
            "example": "10000000000"
          },
          "tokenAmount": {
            "type": "number",
            "title": "Token Amount",
            "description": "Normalized raw amount in token decimals",
            "example": 1000
          },
          "tokenAmountUsd": {
            "type": "number",
            "title": "Token Amount USD",
            "description": "Normalized raw amount in USD",
            "example": 999.99
          },
          "allocationRatio": {
            "type": "number",
            "title": "Allocation Ratio",
            "description": "The ratio of the input token to TVL of the vault",
            "example": 1
          }
        },
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "name",
          "symbol",
          "image",
          "decimals",
          "source",
          "searchId",
          "type",
          "price",
          "fdv",
          "totalSupply",
          "lastUpdated",
          "rawAmount",
          "tokenAmount",
          "tokenAmountUsd",
          "allocationRatio"
        ]
      },
      "VaultAllocation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Allocation ID",
            "description": "The ID of the allocation",
            "example": "1_0_0x9a117f13c7d5d2b4b18e444f72e6e77c010a1fd90cf21135be75669d66ad9428"
          },
          "name": {
            "type": "string",
            "title": "Allocation Market Name",
            "description": "The name of the allocated market",
            "example": "VEDA"
          },
          "link": {
            "type": "string",
            "title": "Allocation Market Link",
            "description": "The link of the allocated market",
            "example": "/market/1/0/0x9a117f13c7d5d2b4b18e444f72e6e77c010a1fd90cf21135be75669d66ad9428"
          },
          "inputToken": {
            "title": "Input Token",
            "description": "The input token of the allocation",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
            "allOf": [
              {
                "$ref": "#/components/schemas/VaultAllocationDepositToken"
              }
            ]
          },
          "incentiveTokens": {
            "title": "Incentive Tokens",
            "description": "The incentive tokens of the allocation",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultIncentiveToken"
            }
          },
          "unlockTimestamp": {
            "type": "string",
            "title": "Unlock Timestamp",
            "description": "The timestamp when the allocation is unlocked",
            "example": "1714531200"
          }
        },
        "required": ["id", "name", "inputToken", "incentiveTokens"]
      },
      "VaultInfoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "ID",
            "description": "The global unique identifier of the vault: <CHAIN_ID>_<VAULT_ADDRESS>",
            "example": "146_0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "vaultAddress": {
            "type": "string",
            "title": "Vault Address",
            "description": "The address of the vault",
            "example": "0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e"
          },
          "name": {
            "type": "string",
            "title": "Vault Name",
            "description": "Roy Sonic USDC",
            "example": "Roy Sonic USDC"
          },
          "description": {
            "type": "string",
            "title": "Vault Description",
            "description": "The description of the vault",
            "example": "Deposit assets to earn highest yields."
          },
          "chainIds": {
            "title": "Chain IDs",
            "description": "The chain IDs of the vault",
            "example": [1, 146],
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "capacity": {
            "title": "Capacity",
            "description": "The capacity of the vault",
            "example": {
              "currentUsd": 1000000,
              "maxUsd": 20000000,
              "ratio": 0.5
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/VaultCapacity"
              }
            ]
          },
          "maxLockup": {
            "type": "string",
            "title": "Max Lockup",
            "description": "The max lockup of the vault",
            "example": "2592000"
          },
          "managers": {
            "title": "Managers",
            "description": "The managers of the vault",
            "example": [
              {
                "id": "veda",
                "name": "VEDA",
                "symbol": "VEDA",
                "image": "https://pbs.twimg.com/profile_images/1790405638847135744/mx3dr412_400x400.png",
                "link": "https://veda.tech/"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultManager"
            }
          },
          "depositTokenIds": {
            "title": "Deposit Token IDs",
            "description": "The deposit token IDs of the vault",
            "example": ["146-0x29219dd400f2bf60e5a23d13be72b486d4038894"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "incentiveTokenIds": {
            "title": "Incentive Token IDs",
            "description": "The incentive token IDs of the vault",
            "example": ["146-0x29219dd400f2bf60e5a23d13be72b486d4038894"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "depositTokens": {
            "title": "Deposit Tokens",
            "description": "The deposit tokens of the vault",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultDepositToken"
            }
          },
          "incentiveTokens": {
            "title": "Incentive Tokens",
            "description": "The incentive tokens of the vault",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultIncentiveToken"
            }
          },
          "allocations": {
            "title": "Allocations",
            "description": "The allocations of the vault",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultAllocation"
            }
          },
          "isVerified": {
            "type": "boolean",
            "title": "Is Verified",
            "description": "Whether the vault is verified"
          },
          "tvlUsd": {
            "type": "number",
            "title": "TVL USD",
            "description": "The TVL of the vault in USD"
          },
          "yieldRate": {
            "type": "number",
            "title": "Yield Rate",
            "description": "Yield rate as a ratio: 0.1 = 10%, 1 = 100%, etc.",
            "example": "0.1"
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          }
        },
        "required": [
          "id",
          "chainId",
          "vaultAddress",
          "name",
          "description",
          "chainIds",
          "capacity",
          "maxLockup",
          "managers",
          "depositTokenIds",
          "incentiveTokenIds",
          "depositTokens",
          "incentiveTokens",
          "allocations",
          "isVerified",
          "tvlUsd",
          "yieldRate",
          "lastUpdated"
        ]
      },
      "ResponsePage": {
        "type": "object",
        "properties": {
          "index": {
            "type": "number",
            "title": "Page Index",
            "description": "Page index",
            "example": 1
          },
          "size": {
            "type": "number",
            "title": "Page Size",
            "description": "Page size",
            "example": 3
          },
          "total": {
            "type": "number",
            "title": "Page Total",
            "description": "Page total",
            "example": 10
          }
        },
        "required": ["index", "size", "total"]
      },
      "BaseEnrichedTokenData": {
        "type": "object",
        "properties": {
          "rawMetadata": {
            "type": "object",
            "title": "Raw Metadata",
            "description": "Raw metadata"
          },
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "contractAddress": {
            "type": "string",
            "title": "Contract Address",
            "description": "Deployment address of the contract",
            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the token",
            "example": "USDC"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol",
            "description": "The symbol of the token",
            "example": "USDC"
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The logo of the token",
            "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png"
          },
          "decimals": {
            "type": "number",
            "title": "Decimals",
            "description": "The number of decimals of the token",
            "example": 6
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "The source for the price feed of the token",
            "example": "coinmarketcap",
            "enum": [
              "coinmarketcap",
              "coingecko",
              "lp",
              "enso",
              "pendle",
              "plume",
              "external"
            ]
          },
          "searchId": {
            "type": "string",
            "title": "Search ID",
            "description": "The search id for the token on the source price feed: for CoinmarketCap, it's UCID (found under metadata section of the token page) -- for Coingecko, it's token slug (found in the URL of the token page) -- for all other sources, we have a custom search id according to their price feed API schema",
            "example": "3408"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the token",
            "example": "token",
            "enum": ["token", "point", "lp"]
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          },
          "owner": {
            "type": "string",
            "title": "Owner",
            "description": "The owner of the point program token",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "issuers": {
            "title": "Issuers",
            "description": "Authorized issuers of the point program token",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTokens": {
            "title": "Sub Tokens",
            "description": "Array of sub tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenQuote"
            }
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          },
          "rawAmount": {
            "type": "string",
            "title": "Raw Amount",
            "description": "Amount in wei",
            "example": "10000000000"
          },
          "tokenAmount": {
            "type": "number",
            "title": "Token Amount",
            "description": "Normalized raw amount in token decimals",
            "example": 1000
          },
          "tokenAmountUsd": {
            "type": "number",
            "title": "Token Amount USD",
            "description": "Normalized raw amount in USD",
            "example": 999.99
          }
        },
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "name",
          "symbol",
          "image",
          "decimals",
          "source",
          "searchId",
          "type",
          "price",
          "fdv",
          "totalSupply",
          "lastUpdated",
          "rawAmount",
          "tokenAmount",
          "tokenAmountUsd"
        ]
      },
      "MarketActiveIncentive": {
        "type": "object",
        "properties": {
          "rawMetadata": {
            "type": "object",
            "title": "Raw Metadata",
            "description": "Raw metadata"
          },
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "contractAddress": {
            "type": "string",
            "title": "Contract Address",
            "description": "Deployment address of the contract",
            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the token",
            "example": "USDC"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol",
            "description": "The symbol of the token",
            "example": "USDC"
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The logo of the token",
            "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png"
          },
          "decimals": {
            "type": "number",
            "title": "Decimals",
            "description": "The number of decimals of the token",
            "example": 6
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "The source for the price feed of the token",
            "example": "coinmarketcap",
            "enum": [
              "coinmarketcap",
              "coingecko",
              "lp",
              "enso",
              "pendle",
              "plume",
              "external"
            ]
          },
          "searchId": {
            "type": "string",
            "title": "Search ID",
            "description": "The search id for the token on the source price feed: for CoinmarketCap, it's UCID (found under metadata section of the token page) -- for Coingecko, it's token slug (found in the URL of the token page) -- for all other sources, we have a custom search id according to their price feed API schema",
            "example": "3408"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the token",
            "example": "token",
            "enum": ["token", "point", "lp"]
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          },
          "owner": {
            "type": "string",
            "title": "Owner",
            "description": "The owner of the point program token",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "issuers": {
            "title": "Issuers",
            "description": "Authorized issuers of the point program token",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTokens": {
            "title": "Sub Tokens",
            "description": "Array of sub tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenQuote"
            }
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          },
          "rawAmount": {
            "type": "string",
            "title": "Raw Amount",
            "description": "Amount in wei",
            "example": "10000000000"
          },
          "tokenAmount": {
            "type": "number",
            "title": "Token Amount",
            "description": "Normalized raw amount in token decimals",
            "example": 1000
          },
          "tokenAmountUsd": {
            "type": "number",
            "title": "Token Amount USD",
            "description": "Normalized raw amount in USD",
            "example": 999.99
          },
          "yieldRate": {
            "type": "number",
            "title": "Yield Rate",
            "description": "Yield rate as a ratio: 0.1 = 10%, 1 = 100%, etc.",
            "example": "0.1"
          }
        },
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "name",
          "symbol",
          "image",
          "decimals",
          "source",
          "searchId",
          "type",
          "price",
          "fdv",
          "totalSupply",
          "lastUpdated",
          "rawAmount",
          "tokenAmount",
          "tokenAmountUsd",
          "yieldRate"
        ]
      },
      "MarketNativeIncentive": {
        "type": "object",
        "properties": {
          "rawMetadata": {
            "type": "object",
            "title": "Raw Metadata",
            "description": "Raw metadata"
          },
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "contractAddress": {
            "type": "string",
            "title": "Contract Address",
            "description": "Deployment address of the contract",
            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the token",
            "example": "USDC"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol",
            "description": "The symbol of the token",
            "example": "USDC"
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The logo of the token",
            "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png"
          },
          "decimals": {
            "type": "number",
            "title": "Decimals",
            "description": "The number of decimals of the token",
            "example": 6
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "The source for the price feed of the token",
            "example": "coinmarketcap",
            "enum": [
              "coinmarketcap",
              "coingecko",
              "lp",
              "enso",
              "pendle",
              "plume",
              "external"
            ]
          },
          "searchId": {
            "type": "string",
            "title": "Search ID",
            "description": "The search id for the token on the source price feed: for CoinmarketCap, it's UCID (found under metadata section of the token page) -- for Coingecko, it's token slug (found in the URL of the token page) -- for all other sources, we have a custom search id according to their price feed API schema",
            "example": "3408"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the token",
            "example": "token",
            "enum": ["token", "point", "lp"]
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          },
          "owner": {
            "type": "string",
            "title": "Owner",
            "description": "The owner of the point program token",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "issuers": {
            "title": "Issuers",
            "description": "Authorized issuers of the point program token",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTokens": {
            "title": "Sub Tokens",
            "description": "Array of sub tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenQuote"
            }
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          },
          "label": {
            "type": "string",
            "title": "Incentive Label",
            "description": "The custom label for the incentive token"
          },
          "yieldRate": {
            "type": "number",
            "title": "Yield Rate",
            "description": "Yield rate as a ratio: 0.1 = 10%, 1 = 100%, etc.",
            "example": "0.1"
          }
        },
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "name",
          "symbol",
          "image",
          "decimals",
          "source",
          "searchId",
          "type",
          "price",
          "fdv",
          "totalSupply",
          "lastUpdated",
          "yieldRate"
        ]
      },
      "MarketExternalIncentive": {
        "type": "object",
        "properties": {
          "rawMetadata": {
            "type": "object",
            "title": "Raw Metadata",
            "description": "Raw metadata"
          },
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "contractAddress": {
            "type": "string",
            "title": "Contract Address",
            "description": "Deployment address of the contract",
            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the token",
            "example": "USDC"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol",
            "description": "The symbol of the token",
            "example": "USDC"
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The logo of the token",
            "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png"
          },
          "decimals": {
            "type": "number",
            "title": "Decimals",
            "description": "The number of decimals of the token",
            "example": 6
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "The source for the price feed of the token",
            "example": "coinmarketcap",
            "enum": [
              "coinmarketcap",
              "coingecko",
              "lp",
              "enso",
              "pendle",
              "plume",
              "external"
            ]
          },
          "searchId": {
            "type": "string",
            "title": "Search ID",
            "description": "The search id for the token on the source price feed: for CoinmarketCap, it's UCID (found under metadata section of the token page) -- for Coingecko, it's token slug (found in the URL of the token page) -- for all other sources, we have a custom search id according to their price feed API schema",
            "example": "3408"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the token",
            "example": "token",
            "enum": ["token", "point", "lp"]
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          },
          "owner": {
            "type": "string",
            "title": "Owner",
            "description": "The owner of the point program token",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "issuers": {
            "title": "Issuers",
            "description": "Authorized issuers of the point program token",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTokens": {
            "title": "Sub Tokens",
            "description": "Array of sub tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenQuote"
            }
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          },
          "label": {
            "type": "string",
            "title": "Incentive Label",
            "description": "The custom label for the incentive token"
          },
          "yieldText": {
            "type": "string",
            "title": "Yield Text",
            "description": "Yield rate in string format to represent any arbitrary yields",
            "examples": ["10x AAVE", "25 BTC pro-rata", "3x DAI per share"]
          }
        },
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "name",
          "symbol",
          "image",
          "decimals",
          "source",
          "searchId",
          "type",
          "price",
          "fdv",
          "totalSupply",
          "lastUpdated",
          "yieldText"
        ]
      },
      "RecipePosition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "ID",
            "description": "The global unique identifier of the position: <CHAIN_ID>_<MARKET_TYPE>_<MARKET_ID>_<WEIROLL_WALLET_ADDRESS>"
          },
          "rawMarketRefId": {
            "type": "string",
            "title": "Raw Market Ref ID",
            "description": "The raw market reference ID",
            "example": "1_0_0x83c459782b2ff36629401b1a592354fc085f29ae00cf97b803f73cac464d389b"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "marketId": {
            "type": "string",
            "title": "Market ID",
            "description": "The on-chain identifier of the market: For recipe market, it's market hash -- for vault market, it's wrapped vault address",
            "example": "0x83c459782b2ff36629401b1a592354fc085f29ae00cf97b803f73cac464d389b"
          },
          "weirollWallet": {
            "type": "string",
            "title": "Weiroll Wallet Address",
            "description": "Address of the weiroll wallet for this position"
          },
          "accountAddress": {
            "type": "string",
            "title": "Account Address",
            "description": "Wallet address of the account",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "rewardStyle": {
            "type": "number",
            "title": "Reward Style",
            "description": "The reward distribution style for the market: 0 = Upfront, 1 = Arrear, 2 = Forfeitable",
            "example": 0,
            "enum": [0, 1, 2]
          },
          "isForfeited": {
            "type": "boolean",
            "title": "Is Forfeited",
            "description": "Whether the position has been forfeited",
            "example": false
          },
          "unlockTimestamp": {
            "type": "string",
            "title": "Unlock Timestamp",
            "description": "Block timestamp when the position will be unlocked"
          },
          "blockNumber": {
            "type": "string",
            "title": "Block Number",
            "description": "Block number associated with the entity",
            "example": "21910786"
          },
          "blockTimestamp": {
            "type": "string",
            "title": "Block Timestamp",
            "description": "Block timestamp associated with the entity",
            "example": "1743357424"
          },
          "transactionHash": {
            "type": "string",
            "title": "Transaction Hash",
            "description": "Transaction hash associated with the entity",
            "example": "0xbd48c4956ca72ebca29e517f556676170f78914b786518854c3c57be933af461"
          },
          "logIndex": {
            "type": "string",
            "title": "Log Index",
            "description": "Log index associated with the entity",
            "example": "12"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the market",
            "example": "Swap USDC to stkGHO for 1 mo"
          },
          "lockupTime": {
            "type": "string",
            "title": "Lockup Time",
            "description": "The lockup time for the market in seconds. Note: vault markets always have a lockup time of \"0\"",
            "example": "31536000"
          },
          "inputToken": {
            "title": "Input Token Data",
            "description": "Token data for the market input token",
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseEnrichedTokenData"
              }
            ]
          },
          "incentiveTokens": {
            "title": "Incentive Tokens",
            "description": "Active incentive tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketActiveIncentive"
            }
          },
          "nativeIncentives": {
            "title": "Native Incentives",
            "description": "Native incentive tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketNativeIncentive"
            }
          },
          "externalIncentives": {
            "title": "External Incentives",
            "description": "External incentive tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketExternalIncentive"
            }
          },
          "yieldRate": {
            "type": "number",
            "title": "Yield Rate",
            "description": "Yield rate as a ratio: 0.1 = 10%, 1 = 100%, etc.",
            "example": "0.1"
          }
        },
        "required": [
          "id",
          "rawMarketRefId",
          "chainId",
          "marketId",
          "weirollWallet",
          "accountAddress",
          "rewardStyle",
          "isForfeited",
          "unlockTimestamp",
          "blockNumber",
          "blockTimestamp",
          "transactionHash",
          "logIndex",
          "name",
          "lockupTime",
          "inputToken",
          "incentiveTokens",
          "yieldRate"
        ]
      },
      "RecipePositionResponse": {
        "type": "object",
        "properties": {
          "page": {
            "title": "Response Page Object",
            "description": "Object type to respond with a page of results",
            "example": {
              "index": 1,
              "size": 3,
              "total": 10
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/ResponsePage"
              }
            ]
          },
          "count": {
            "type": "number",
            "title": "Row Count",
            "description": "Total number of rows in the results",
            "example": 234
          },
          "data": {
            "title": "Recipe positions",
            "description": "Recipe positions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipePosition"
            }
          }
        },
        "required": ["page", "count", "data"]
      },
      "VaultPosition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "ID",
            "description": "The global unique identifier of the position: <CHAIN_ID>_<MARKET_TYPE>_<MARKET_ID>_<ACCOUNT_ADDRESS>"
          },
          "rawMarketRefId": {
            "type": "string",
            "title": "Raw Market Ref ID",
            "description": "The raw market reference ID",
            "example": "1_0_0x83c459782b2ff36629401b1a592354fc085f29ae00cf97b803f73cac464d389b"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "marketId": {
            "type": "string",
            "title": "Market ID",
            "description": "The on-chain identifier of the market: For recipe market, it's market hash -- for vault market, it's wrapped vault address",
            "example": "0x83c459782b2ff36629401b1a592354fc085f29ae00cf97b803f73cac464d389b"
          },
          "accountAddress": {
            "type": "string",
            "title": "Account Address",
            "description": "Wallet address of the account",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "shares": {
            "title": "Vault Shares",
            "description": "Raw amount of vault shares in wei",
            "example": "1000000000000000000",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the market",
            "example": "Swap USDC to stkGHO for 1 mo"
          },
          "lockupTime": {
            "type": "string",
            "title": "Lockup Time",
            "description": "The lockup time for the market in seconds. Note: vault markets always have a lockup time of \"0\"",
            "example": "31536000"
          },
          "inputToken": {
            "title": "Input Token Data",
            "description": "Token data for the market input token",
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseEnrichedTokenData"
              }
            ]
          },
          "incentiveTokens": {
            "title": "Incentive Tokens",
            "description": "Active incentive tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketActiveIncentive"
            }
          },
          "claimedIncentiveTokens": {
            "title": "Claimed Incentive Tokens",
            "description": "Claimed incentive tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseEnrichedTokenData"
            }
          },
          "nativeIncentives": {
            "title": "Native Incentives",
            "description": "Native incentive tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketNativeIncentive"
            }
          },
          "externalIncentives": {
            "title": "External Incentives",
            "description": "External incentive tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketExternalIncentive"
            }
          },
          "yieldRate": {
            "type": "number",
            "title": "Yield Rate",
            "description": "Yield rate as a ratio: 0.1 = 10%, 1 = 100%, etc.",
            "example": "0.1"
          }
        },
        "required": [
          "id",
          "rawMarketRefId",
          "chainId",
          "marketId",
          "accountAddress",
          "shares",
          "name",
          "lockupTime",
          "inputToken",
          "incentiveTokens",
          "claimedIncentiveTokens",
          "yieldRate"
        ]
      },
      "VaultPositionResponse": {
        "type": "object",
        "properties": {
          "page": {
            "title": "Response Page Object",
            "description": "Object type to respond with a page of results",
            "example": {
              "index": 1,
              "size": 3,
              "total": 10
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/ResponsePage"
              }
            ]
          },
          "count": {
            "type": "number",
            "title": "Row Count",
            "description": "Total number of rows in the results",
            "example": 234
          },
          "data": {
            "title": "Vault positions",
            "description": "Vault positions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultPosition"
            }
          }
        },
        "required": ["page", "count", "data"]
      },
      "VaultPositionUnclaimedRewardToken": {
        "type": "object",
        "properties": {
          "rawMetadata": {
            "type": "object",
            "title": "Raw Metadata",
            "description": "Raw metadata"
          },
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "contractAddress": {
            "type": "string",
            "title": "Contract Address",
            "description": "Deployment address of the contract",
            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the token",
            "example": "USDC"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol",
            "description": "The symbol of the token",
            "example": "USDC"
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The logo of the token",
            "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png"
          },
          "decimals": {
            "type": "number",
            "title": "Decimals",
            "description": "The number of decimals of the token",
            "example": 6
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "The source for the price feed of the token",
            "example": "coinmarketcap",
            "enum": [
              "coinmarketcap",
              "coingecko",
              "lp",
              "enso",
              "pendle",
              "plume",
              "external"
            ]
          },
          "searchId": {
            "type": "string",
            "title": "Search ID",
            "description": "The search id for the token on the source price feed: for CoinmarketCap, it's UCID (found under metadata section of the token page) -- for Coingecko, it's token slug (found in the URL of the token page) -- for all other sources, we have a custom search id according to their price feed API schema",
            "example": "3408"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the token",
            "example": "token",
            "enum": ["token", "point", "lp"]
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          },
          "owner": {
            "type": "string",
            "title": "Owner",
            "description": "The owner of the point program token",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "issuers": {
            "title": "Issuers",
            "description": "Authorized issuers of the point program token",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTokens": {
            "title": "Sub Tokens",
            "description": "Array of sub tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenQuote"
            }
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          },
          "rawAmount": {
            "type": "string",
            "title": "Raw Amount",
            "description": "Amount in wei",
            "example": "10000000000"
          },
          "tokenAmount": {
            "type": "number",
            "title": "Token Amount",
            "description": "Normalized raw amount in token decimals",
            "example": 1000
          },
          "tokenAmountUsd": {
            "type": "number",
            "title": "Token Amount USD",
            "description": "Normalized raw amount in USD",
            "example": 999.99
          },
          "rewardIds": {
            "title": "Reward IDs",
            "description": "The IDs of the reward tokens",
            "example": ["1", "2", "3"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "name",
          "symbol",
          "image",
          "decimals",
          "source",
          "searchId",
          "type",
          "price",
          "fdv",
          "totalSupply",
          "lastUpdated",
          "rawAmount",
          "tokenAmount",
          "tokenAmountUsd",
          "rewardIds"
        ]
      },
      "VaultPositionClaimedRewardToken": {
        "type": "object",
        "properties": {
          "rawMetadata": {
            "type": "object",
            "title": "Raw Metadata",
            "description": "Raw metadata"
          },
          "id": {
            "type": "string",
            "title": "Token ID",
            "description": "Unique identifier for the token: <CHAIN_ID>-<CONTRACT_ADDRESS>",
            "example": "1-0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "contractAddress": {
            "type": "string",
            "title": "Contract Address",
            "description": "Deployment address of the contract",
            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the token",
            "example": "USDC"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol",
            "description": "The symbol of the token",
            "example": "USDC"
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The logo of the token",
            "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png"
          },
          "decimals": {
            "type": "number",
            "title": "Decimals",
            "description": "The number of decimals of the token",
            "example": 6
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "The source for the price feed of the token",
            "example": "coinmarketcap",
            "enum": [
              "coinmarketcap",
              "coingecko",
              "lp",
              "enso",
              "pendle",
              "plume",
              "external"
            ]
          },
          "searchId": {
            "type": "string",
            "title": "Search ID",
            "description": "The search id for the token on the source price feed: for CoinmarketCap, it's UCID (found under metadata section of the token page) -- for Coingecko, it's token slug (found in the URL of the token page) -- for all other sources, we have a custom search id according to their price feed API schema",
            "example": "3408"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the token",
            "example": "token",
            "enum": ["token", "point", "lp"]
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "The price of the token",
            "example": 0.99999999
          },
          "fdv": {
            "type": "number",
            "title": "FDV",
            "description": "The fully diluted valuation of the token",
            "example": 59689964490.12
          },
          "totalSupply": {
            "type": "number",
            "title": "Total Supply",
            "description": "The total supply of the token",
            "example": 59689963893.2
          },
          "owner": {
            "type": "string",
            "title": "Owner",
            "description": "The owner of the point program token",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "issuers": {
            "title": "Issuers",
            "description": "Authorized issuers of the point program token",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTokens": {
            "title": "Sub Tokens",
            "description": "Array of sub tokens",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenQuote"
            }
          },
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          },
          "lastUpdated": {
            "type": "string",
            "title": "Last Updated",
            "description": "The last updated timestamp of the data in YYYY-MM-DD HH:MM:SS format",
            "example": "2025-03-17 17:52:10"
          },
          "rawAmount": {
            "type": "string",
            "title": "Raw Amount",
            "description": "Amount in wei",
            "example": "10000000000"
          },
          "tokenAmount": {
            "type": "number",
            "title": "Token Amount",
            "description": "Normalized raw amount in token decimals",
            "example": 1000
          },
          "tokenAmountUsd": {
            "type": "number",
            "title": "Token Amount USD",
            "description": "Normalized raw amount in USD",
            "example": 999.99
          },
          "rewardIds": {
            "title": "Reward IDs",
            "description": "The IDs of the reward tokens",
            "example": ["1", "2", "3"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "name",
          "symbol",
          "image",
          "decimals",
          "source",
          "searchId",
          "type",
          "price",
          "fdv",
          "totalSupply",
          "lastUpdated",
          "rawAmount",
          "tokenAmount",
          "tokenAmountUsd",
          "rewardIds"
        ]
      },
      "BoringPosition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "ID",
            "description": "The global unique identifier of the position: <CHAIN_ID>_<VAULT_ADDRESS>_<ACCOUNT_ADDRESS>"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "vaultAddress": {
            "type": "string",
            "title": "Vault Address",
            "description": "The address of the vault",
            "example": "0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e"
          },
          "accountAddress": {
            "type": "string",
            "title": "Account Address",
            "description": "Wallet address of the account",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "unclaimedRewardTokens": {
            "title": "Unclaimed Reward Tokens",
            "description": "The unclaimed reward tokens for the position",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultPositionUnclaimedRewardToken"
            }
          },
          "claimedRewardTokens": {
            "title": "Claimed Reward Tokens",
            "description": "The claimed reward tokens for the position",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultPositionClaimedRewardToken"
            }
          }
        },
        "required": [
          "id",
          "chainId",
          "vaultAddress",
          "accountAddress",
          "unclaimedRewardTokens",
          "claimedRewardTokens"
        ]
      },
      "BoringPositionResponse": {
        "type": "object",
        "properties": {
          "page": {
            "title": "Response Page Object",
            "description": "Object type to respond with a page of results",
            "example": {
              "index": 1,
              "size": 3,
              "total": 10
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/ResponsePage"
              }
            ]
          },
          "count": {
            "type": "number",
            "title": "Row Count",
            "description": "Total number of rows in the results",
            "example": 234
          },
          "data": {
            "title": "Boring positions",
            "description": "Boring positions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoringPosition"
            }
          }
        },
        "required": ["page", "count", "data"]
      },
      "SpecificBoringPositionRequest": {
        "type": "object",
        "properties": {
          "customTokenData": {
            "title": "Custom Token Data",
            "description": "Array of custom token assumptions --  if not provided, the default quote data will be used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTokenDataElement"
            }
          }
        }
      },
      "SpecificBoringPositionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "ID",
            "description": "The global unique identifier of the position: <CHAIN_ID>_<VAULT_ADDRESS>_<ACCOUNT_ADDRESS>"
          },
          "chainId": {
            "type": "number",
            "title": "Chain ID",
            "description": "Network ID of the blockchain",
            "example": 1
          },
          "vaultAddress": {
            "type": "string",
            "title": "Vault Address",
            "description": "The address of the vault",
            "example": "0x45088fb2ffebfdcf4dff7b7201bfa4cd2077c30e"
          },
          "accountAddress": {
            "type": "string",
            "title": "Account Address",
            "description": "Wallet address of the account",
            "example": "0x77777cc68b333a2256b436d675e8d257699aa667"
          },
          "unclaimedRewardTokens": {
            "title": "Unclaimed Reward Tokens",
            "description": "The unclaimed reward tokens for the position",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultPositionUnclaimedRewardToken"
            }
          },
          "claimedRewardTokens": {
            "title": "Claimed Reward Tokens",
            "description": "The claimed reward tokens for the position",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultPositionClaimedRewardToken"
            }
          }
        },
        "required": [
          "id",
          "chainId",
          "vaultAddress",
          "accountAddress",
          "unclaimedRewardTokens",
          "claimedRewardTokens"
        ]
      }
    }
  }
}
